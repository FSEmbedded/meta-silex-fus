From a313d3cfccf4ce0999c1616282e4d0600aeaaee3 Mon Sep 17 00:00:00 2001
Message-Id: <a313d3cfccf4ce0999c1616282e4d0600aeaaee3.1711648979.git.keller@fs-net.de>
In-Reply-To: <bb92f3f011b7b125a61ac948b576f518cee03bb3.1711648979.git.keller@fs-net.de>
References: <bb92f3f011b7b125a61ac948b576f518cee03bb3.1711648979.git.keller@fs-net.de>
From: Lihua Liu <lihual@codeaurora.org>
Date: Fri, 5 Mar 2021 11:16:51 +0800
Subject: [PATCH 14/16] qcacld-2.0: Add eapol sanity checking for intra-bss
 forwarding & indicate

Dropping all eapol frames during intra-bss forwarding. And add eapol
sanity checking when indicate the RX pakcets to the up layer.

Change-Id: I7384cb7ae8a6806df7cfe2e25e62d2fa884b2f65
CRs-Fixed: 2868053
---
 CORE/CLD_TXRX/TXRX/ol_rx_fwd.c       | 29 ++++++++++++++++++++++++++++-
 CORE/HDD/inc/wlan_hdd_cfg.h          | 15 ++++++++++++++-
 CORE/HDD/src/wlan_hdd_cfg.c          |  9 ++++++++-
 CORE/HDD/src/wlan_hdd_softap_tx_rx.c | 33 ++++++++++++++++++++++++++++++++-
 4 files changed, 82 insertions(+), 4 deletions(-)

diff --git a/CORE/CLD_TXRX/TXRX/ol_rx_fwd.c b/CORE/CLD_TXRX/TXRX/ol_rx_fwd.c
index 70555dc..32ef8ae 100644
--- a/CORE/CLD_TXRX/TXRX/ol_rx_fwd.c
+++ b/CORE/CLD_TXRX/TXRX/ol_rx_fwd.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2011, 2014, 2016 The Linux Foundation. All rights reserved.
+ * Copyright (c) 2011, 2014, 2016, 2021 The Linux Foundation. All rights reserved.
  *
  * Previously licensed under the ISC license by Qualcomm Atheros, Inc.
  *
@@ -229,6 +229,33 @@ ol_rx_fwd_check(
              * in which case we need to make a copy (or clone?).
              */
             if (!do_not_fwd) {
+                u_int16_t off = 0;
+                // for HL, point to payload right now
+                if (pdev->cfg.is_high_latency) {
+                    off = htt_rx_msdu_rx_desc_size_hl(pdev->htt_pdev,
+                                                      rx_desc);
+                }
+
+                /*
+                 * CR 2868053
+                 * discard EAPOL frame for intrabss forwarding
+                 */
+                if ((vdev->opmode == wlan_op_mode_ap) &&
+                    __adf_nbuf_data_is_eapol_pkt(adf_nbuf_data(msdu) + off)) {
+                    VOS_TRACE(VOS_MODULE_ID_TXRX, VOS_TRACE_LEVEL_ERROR,
+                        "\n%s:QSV2020005 EAPOL forwarding discard \n",
+                        __FUNCTION__);
+                    /* Drop the packet*/
+                    htt_rx_msdu_desc_free(pdev->htt_pdev, msdu);
+                    TXRX_STATS_MSDU_LIST_INCR(
+                        pdev, tx.dropped.host_reject, msdu);
+                    /* add NULL terminator */
+                    adf_nbuf_set_next(msdu, NULL);
+                    adf_nbuf_tx_free(msdu, ADF_NBUF_PKT_ERROR);
+                    msdu = msdu_list;
+                    continue;
+                }
+
                 if (htt_rx_msdu_discard(pdev->htt_pdev, rx_desc)) {
                         htt_rx_msdu_desc_free(pdev->htt_pdev, msdu);
                         adf_net_buf_debug_release_skb(msdu);
diff --git a/CORE/HDD/inc/wlan_hdd_cfg.h b/CORE/HDD/inc/wlan_hdd_cfg.h
index 70b15ae..b8b7fb4 100644
--- a/CORE/HDD/inc/wlan_hdd_cfg.h
+++ b/CORE/HDD/inc/wlan_hdd_cfg.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2012-2019 The Linux Foundation. All rights reserved.
+ * Copyright (c) 2012-2021 The Linux Foundation. All rights reserved.
  *
  * Previously licensed under the ISC license by Qualcomm Atheros, Inc.
  *
@@ -3251,6 +3251,18 @@ This feature requires the dependent cfg.ini "gRoamPrefer5GHz" set to 1 */
 #define CFG_ENABLE_DEBUG_CONNECT_ISSUE_MAX         (0xFF)
 #define CFG_ENABLE_DEBUG_CONNECT_ISSUE_DEFAULT     (0x76)
 
+/*
+ * Eapol sanity checking Enable/Disable for SAP.
+ * 0x0 - Enable eapol sanity checking in the RX path
+ *       before deliver to the OS in the SAP mode.
+ * 0x1 - Enable eapol sanity checking in the RX path
+ *       before deliver to the OS in the SAP mode.
+ */
+#define CFG_ENABLE_SAP_EAPOL_CHECKING             "gEnableSapEapolChecking"
+#define CFG_ENABLE_SAP_EAPOL_CHECKING_MIN         (0)
+#define CFG_ENABLE_SAP_EAPOL_CHECKING_MAX         (1)
+#define CFG_ENABLE_SAP_EAPOL_CHECKING_DEFAULT     (1)
+
 /*
  * RX packet handling options
  * 0: no rx thread, no RPS, for MDM
@@ -6152,6 +6164,7 @@ struct hdd_config {
    v_U32_t                     TxPower2g;
    v_U32_t                     TxPower5g;
    v_U32_t                     gEnableDebugLog;
+   v_U32_t                     gEnableSapEapolChecking;
    uint8_t                     enable_ac_txq_optimize;
    v_U8_t                      rxhandle;
    uint8_t                     cpu_map_list[CFG_RPS_RX_QUEUE_CPU_MAP_LIST_LEN];
diff --git a/CORE/HDD/src/wlan_hdd_cfg.c b/CORE/HDD/src/wlan_hdd_cfg.c
index bd6036a..1ea275d 100644
--- a/CORE/HDD/src/wlan_hdd_cfg.c
+++ b/CORE/HDD/src/wlan_hdd_cfg.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2012-2019 The Linux Foundation. All rights reserved.
+ * Copyright (c) 2012-2019,2021 The Linux Foundation. All rights reserved.
  *
  * Previously licensed under the ISC license by Qualcomm Atheros, Inc.
  *
@@ -3512,6 +3512,13 @@ REG_TABLE_ENTRY g_registry_table[] =
                  CFG_ENABLE_DEBUG_CONNECT_ISSUE_MIN ,
                  CFG_ENABLE_DEBUG_CONNECT_ISSUE_MAX),
 
+   REG_VARIABLE( CFG_ENABLE_SAP_EAPOL_CHECKING, WLAN_PARAM_Integer,
+                 hdd_config_t, gEnableSapEapolChecking,
+                 VAR_FLAGS_OPTIONAL | VAR_FLAGS_RANGE_CHECK_ASSUME_DEFAULT,
+                 CFG_ENABLE_SAP_EAPOL_CHECKING_DEFAULT,
+                 CFG_ENABLE_SAP_EAPOL_CHECKING_MIN ,
+                 CFG_ENABLE_SAP_EAPOL_CHECKING_MAX),
+
    REG_VARIABLE( CFG_RX_HANDLE, WLAN_PARAM_Integer,
                  hdd_config_t, rxhandle,
                  VAR_FLAGS_OPTIONAL | VAR_FLAGS_RANGE_CHECK_ASSUME_DEFAULT,
diff --git a/CORE/HDD/src/wlan_hdd_softap_tx_rx.c b/CORE/HDD/src/wlan_hdd_softap_tx_rx.c
index e1f1051..40ce8fd 100644
--- a/CORE/HDD/src/wlan_hdd_softap_tx_rx.c
+++ b/CORE/HDD/src/wlan_hdd_softap_tx_rx.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2012-2018 The Linux Foundation. All rights reserved.
+ * Copyright (c) 2012-2018,2021 The Linux Foundation. All rights reserved.
  *
  * Previously licensed under the ISC license by Qualcomm Atheros, Inc.
  *
@@ -935,6 +935,37 @@ VOS_STATUS hdd_softap_rx_packet_cbk(v_VOID_t *vosContext,
       }
 #endif /* QCA_PKT_PROTO_TRACE */
 
+      if (pHddCtx->cfg_ini->gEnableSapEapolChecking) {
+          if (adf_nbuf_is_eapol_pkt(skb)) {
+              /* CR 2868053 */
+              VOS_TRACE(VOS_MODULE_ID_HDD_DATA, VOS_TRACE_LEVEL_INFO,
+                  "%s: QSV2020005, dev, mode=%d, session=%u, %s, addr (%pM)",
+                  __FUNCTION__,
+                  pAdapter->device_mode,
+                  pAdapter->sessionId,
+                  pAdapter->dev->name,
+                  pAdapter->dev->dev_addr);
+              VOS_TRACE(VOS_MODULE_ID_HDD_DATA, VOS_TRACE_LEVEL_INFO,
+                  "%s:QSV2020005 pkt addr (%pM)",
+                  __FUNCTION__,
+                  skb->data);
+              if (adf_os_mem_cmp(pAdapter->dev->dev_addr,
+                skb->data, VOS_MAC_ADDR_SIZE)) {
+                  /* CR 2868053, discard this EAPOL */
+                  VOS_TRACE(VOS_MODULE_ID_HDD_DATA, VOS_TRACE_LEVEL_ERROR,
+                      "%s:QSV2020005 discard invalid EAPOL frame, dev=%pM, "
+                      "pkt_da=%pM",
+                      __FUNCTION__,
+                      pAdapter->dev->dev_addr,
+                      skb->data);
+
+                  adf_nbuf_free(skb);
+                  skb = skb_next;
+                  continue;
+              }
+          }
+      }
+
       skb->protocol = eth_type_trans(skb, skb->dev);
 
       /**
-- 
2.14.5

